{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/chat-interface.service.ts","./src/app/app.module.ts","./src/app/messages-component/messages-component.component.ts","./src/app/messages-component/messages-component.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\nimport { Title } from '@angular/platform-browser';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'River - RiveScript based chatbot in Angular';\n\n  public constructor(private titleService: Title){\n    this.titleService.setTitle(this.title);\n  }\n\n}\n","\n    <app-messages-component></app-messages-component>\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http'\nimport {ChatResponse} from './chat-response';\nimport { HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChatInterfaceService {\n\n  constructor(private http: HttpClient) { }\n\n  Talk(message){\n    try{\n      const headers= new HttpHeaders()\n      .set('Bypass-Tunnel-Reminder', '*')\n      .set('User-Agent', 'Chatbot');\n      return this.http.get<ChatResponse>(this.hostUrl, { params: new HttpParams().set('text', message), responseType: \"json\" });\n    }catch{\n      return this.http.get<ChatResponse>(this.hostUrlBackup, { params: new HttpParams().set('text', message), responseType: \"json\" });\n    }\n    }\n\nhostUrl = \"https://riverscript-bot-20201231.loca.lt\";\nhostUrlBackup = \"https://river-backend.herokuapp.com\";\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MessagesComponentComponent } from './messages-component/messages-component.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MessagesComponentComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, AfterViewChecked, ElementRef, ViewChild, } from '@angular/core';\nimport {ChatInterfaceService} from '../chat-interface.service';\nimport { ChatResponse } from '../chat-response';\nimport {ChatInterface} from '../chat-interface';\nimport { ChangeDetectionStrategy } from '@angular/compiler/src/compiler_facade_interface';\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\n\n@Component({\n  selector: 'app-messages-component',\n  templateUrl: './messages-component.component.html',\n  styleUrls: ['./messages-component.component.sass']\n})\n\n\n\nexport class MessagesComponentComponent implements OnInit, AfterViewChecked  {\n@ViewChild('scrollMe') private myScrollContainer: ElementRef;\nmessages: ChatInterface[] = []\nmessageText: string\nCounter : number = 0\n\n  constructor(private botService: ChatInterfaceService) { }\n\n  ngOnInit(): void {\n    this.scrollToBottom(); \n  }\n  ngAfterViewChecked() {        \n    this.scrollToBottom();        \n} \n\nscrollToBottom(): void {\n    try {\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\n    } catch(err) { }                 \n}\n\n  sendMessage(message: string){\n    let msg = this.messageText;\nthis.messageText = \"\";\n    this.messages.push({timestamp: new Date(), Message: msg, UserIsHuman: true});\n    this.TalkToBot(msg);\n    this.Counter++;\n  }\n\n  TalkToBot(message) {\n    this.botService.Talk(message).subscribe((data: ChatResponse) => { this.messages.push({timestamp: new Date(), Message: data.response, UserIsHuman: false})});\n  }\n  \n}\n","<div class=\"container-fluid h-100\" id=\"app\">\n    <div class=\"row justify-content-center  h-100\">\n  <div class=\"col-12 card h-100\">\n        <div class=\"card-header msg_head\">\n            <div class=\"d-flex bd-highlight justify-content-between\">\n                <div class=\"img_cont\">\n                    <img src=\"./assets/images/msrobot.png\" class=\"rounded-circle user_img\" alt=\"River\" />\n                    <span class=\"online_icon\"></span>\n                </div>\n            <div class=\"user_info\">\n                <span>Chat with River</span>\n                <p><i id=\"msgCount\">{{Counter}}</i> Messages</p>\n            </div>\n                <a  href=\"#\" class=\"text-light\" aria-label=\"Info\" data-toggle=\"modal\" data-target=\"#aboutModal\"><i class=\"fas fa-info-circle fa-3x\"></i></a>\n            </div>\n        </div>\n        <div class=\"card-body msg_card_body scr\" id=\"dialogue\" #scrollMe> \n            <div *ngFor=\"let message of messages\">\n                <div *ngIf=\"!message.UserIsHuman; else elseBlock\" class=\"d-flex justify-content-start mb-4\">\n                    <div class=\"img_cont_msg\">\n                        <img src=\"./assets/images/msrobot.png\" class=\"rounded-circle user_img_msg\" alt=\"River\" />\n                    </div>\n                    <div class=\"msg_cotainer\">\n                        <p>{{message.Message}}</p>\n                        <span class=\"msg_time\">{{message.timestamp.toLocaleTimeString()}}</span>\n                    </div>\n                </div>\n                <ng-template #elseBlock>        \n                    <div class=\"d-flex justify-content-end mb-4\">\n                        <div class=\"msg_cotainer_send\">\n                            <p>{{message.Message}}</p>\n                            <span class=\"msg_time_send\">{{message.timestamp.toLocaleTimeString()}}</span>\n                        </div>\n                        <div class=\"img_cont_msg\">\n                            <img src=\"./assets/images/user.png\" class=\"rounded-circle user_img_msg\" alt=\"User\" />\n                        </div>\n                    </div>\t\n                </ng-template>\n            </div>\n        </div>\n        <div class=\"card-footer\">\n            <form (ngSubmit)=\"sendMessage(messageText)\">\n                <div class=\"input-group\">\n                    <div class=\"input-group-append\">\n                        <span class=\"input-group-text attach_btn\"></span>\n                    </div>\n                    <input type=\"text\" class=\"form-control type_msg\" aria-label=\"Input Message\" [(ngModel)]=\"messageText\" name=\"mgText\" placeholder=\"Type your message...\" >\n                    <div class=\"input-group-append\">\n                        <button type=\"submit\" class=\"input-group-text send_btn\"> Send<i class=\"fas fa-location-arrow\"></i></button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n</div> \n</div>  ","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}