{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/chat-interface.service.ts","./src/app/messages-component/messages-component.component.ts","./src/app/messages-component/messages-component.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\n\r\nconst routes: Routes = [];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.sass']\r\n})\r\nexport class AppComponent {\r\n  title = 'River - RiveScript based chatbot in Angular';\r\n\r\n  public constructor(private titleService: Title){\r\n    this.titleService.setTitle(this.title);\r\n  }\r\n\r\n}\r\n","\r\n    <app-messages-component></app-messages-component>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MessagesComponentComponent } from './messages-component/messages-component.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MessagesComponentComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http'\r\nimport {ChatResponse} from './chat-response';\r\nimport { HttpHeaders } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ChatInterfaceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  Talk(message){\r\n    try{\r\n      return this.http.get<ChatResponse>(this.hostUrl, { params: new HttpParams().set('text', message), responseType: \"json\" });\r\n    }catch{\r\n      const headers= new HttpHeaders()\r\n      .set('Bypass-Tunnel-Reminder', '*')\r\n      .set('User-Agent', 'Chatbot');\r\n      return this.http.get<ChatResponse>(this.hostUrlBackup, { params: new HttpParams().set('text', message), responseType: \"json\" });\r\n    }\r\n    }\r\n\r\nhostUrl = \"https://bot.liukonen.dev\";\r\nhostUrlBackup = \"https://river-backend.herokuapp.com\";\r\n}\r\n","import { Component, OnInit, AfterViewChecked, ElementRef, ViewChild, } from '@angular/core';\r\nimport {ChatInterfaceService} from '../chat-interface.service';\r\nimport { ChatResponse } from '../chat-response';\r\nimport {ChatInterface} from '../chat-interface';\r\nimport { ChangeDetectionStrategy } from '@angular/compiler/src/compiler_facade_interface';\r\nimport { Message } from '@angular/compiler/src/i18n/i18n_ast';\r\n\r\n@Component({\r\n  selector: 'app-messages-component',\r\n  templateUrl: './messages-component.component.html',\r\n  styleUrls: ['./messages-component.component.sass']\r\n})\r\n\r\n\r\n\r\nexport class MessagesComponentComponent implements OnInit, AfterViewChecked  {\r\n@ViewChild('scrollMe') private myScrollContainer: ElementRef;\r\nmessages: ChatInterface[] = []\r\nmessageText: string\r\nCounter : number = 0\r\n\r\n  constructor(private botService: ChatInterfaceService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.scrollToBottom(); \r\n  }\r\n  ngAfterViewChecked() {        \r\n    this.scrollToBottom();        \r\n} \r\n\r\nscrollToBottom(): void {\r\n    try {\r\n        this.myScrollContainer.nativeElement.scrollTop = this.myScrollContainer.nativeElement.scrollHeight;\r\n    } catch(err) { }                 \r\n}\r\n\r\n  sendMessage(message: string){\r\n    let msg = this.messageText;\r\nthis.messageText = \"\";\r\n    this.messages.push({timestamp: new Date(), Message: msg, UserIsHuman: true});\r\n    this.TalkToBot(msg);\r\n    this.Counter++;\r\n  }\r\n\r\n  TalkToBot(message) {\r\n    this.botService.Talk(message).subscribe((data: ChatResponse) => { this.messages.push({timestamp: new Date(), Message: data.response, UserIsHuman: false})});\r\n  }\r\n  \r\n}\r\n","<div class=\"container-fluid h-100\" id=\"app\">\r\n    <div class=\"row justify-content-center  h-100\">\r\n  <div class=\"col-12 card h-100\">\r\n        <div class=\"card-header msg_head\">\r\n            <div class=\"d-flex bd-highlight justify-content-between\">\r\n                <div class=\"img_cont\">\r\n                    <img src=\"./assets/images/msrobot.png\" class=\"rounded-circle user_img\" alt=\"River\" />\r\n                    <span class=\"online_icon\"></span>\r\n                </div>\r\n            <div class=\"user_info\">\r\n                <span>Chat with River</span>\r\n                <p><i id=\"msgCount\">{{Counter}}</i> Messages</p>\r\n            </div>\r\n                <a  href=\"#\" class=\"text-light\" aria-label=\"Info\" data-toggle=\"modal\" data-target=\"#aboutModal\"><i class=\"fas fa-info-circle fa-3x\"></i></a>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-body msg_card_body scr\" id=\"dialogue\" #scrollMe> \r\n            <div *ngFor=\"let message of messages\">\r\n                <div *ngIf=\"!message.UserIsHuman; else elseBlock\" class=\"d-flex justify-content-start mb-4\">\r\n                    <div class=\"img_cont_msg\">\r\n                        <img src=\"./assets/images/msrobot.png\" class=\"rounded-circle user_img_msg\" alt=\"River\" />\r\n                    </div>\r\n                    <div class=\"msg_cotainer\">\r\n                        <p>{{message.Message}}</p>\r\n                        <span class=\"msg_time\">{{message.timestamp.toLocaleTimeString()}}</span>\r\n                    </div>\r\n                </div>\r\n                <ng-template #elseBlock>        \r\n                    <div class=\"d-flex justify-content-end mb-4\">\r\n                        <div class=\"msg_cotainer_send\">\r\n                            <p>{{message.Message}}</p>\r\n                            <span class=\"msg_time_send\">{{message.timestamp.toLocaleTimeString()}}</span>\r\n                        </div>\r\n                        <div class=\"img_cont_msg\">\r\n                            <img src=\"./assets/images/user.png\" class=\"rounded-circle user_img_msg\" alt=\"User\" />\r\n                        </div>\r\n                    </div>\t\r\n                </ng-template>\r\n            </div>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <form (ngSubmit)=\"sendMessage(messageText)\">\r\n                <div class=\"input-group\">\r\n                    <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text attach_btn\"></span>\r\n                    </div>\r\n                    <input type=\"text\" class=\"form-control type_msg\" aria-label=\"Input Message\" [(ngModel)]=\"messageText\" name=\"mgText\" placeholder=\"Type your message...\" >\r\n                    <div class=\"input-group-append\">\r\n                        <button type=\"submit\" class=\"input-group-text send_btn\"> Send<i class=\"fas fa-location-arrow\"></i></button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div> \r\n</div>  ","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///"}